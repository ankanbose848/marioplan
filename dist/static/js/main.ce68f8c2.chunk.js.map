{"version":3,"sources":["components/layout/SignedInLInks.js","store/actions/authActions.js","components/layout/SignedOutLInks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","isLoaded","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","useFirestoreForProfile","config","userProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ce68f8c2.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{ props.profile.initials }</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n        // Async code\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch( { type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch( { type: 'LOGIN_ERROR', err })\n        } )\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n        // async code\n        firebase.auth().signOut().then(() => {\n            dispatch( { type: 'SIGNOUT_SUCCESS' })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch( { type: 'SIGNUP_SUCCESS'} )\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLInks'\nimport SignedOutLinks from './SignedOutLInks'\nimport { connect } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props\n    // console.log(auth);\n    const links = auth.uid ? (<SignedInLinks profile={profile} />) : (<SignedOutLinks />)\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                { isLoaded(auth) && links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-3 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{ project.title }</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-3\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{ item.user } </span>\n                                    <span>{ item.content }</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> \n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n\nfunction ProjectDetails(props) {\n    const { project, auth } = props\n    if (!auth.uid) {\n      return <Redirect to='/signin' />\n    }\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-2\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{ project.title }</span>\n                        <p>{ project.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by the { project.authorFirstName } { project.authorLastName }</div>\n                        <div>{ moment(project.createdAt.toDate()).calendar() }</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"container center\">\n                <p> Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // console.log(state);\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ?  (projects[id]) : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\n\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    \n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    \n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 x-depth-3\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p>: null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => {\n            dispatch(signUp(newUser))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/')\n  }\n  render() {\n    const { auth } = this.props\n    if (!auth.uid) {\n      return <Redirect to='/signin' />\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            // title: project.title,\n            // content: project.content\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project: project})\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        })\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component{\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'LogIn failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log(\"Created project\", action.project);\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers} from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\n\nconst rootReducer =  combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/analytics'\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCF99CqZndPzuTVjE0g0vJ3uQlvfWrz6fU\",\n    authDomain: \"marioplan-df136.firebaseapp.com\",\n    databaseURL: \"https://marioplan-df136.firebaseio.com\",\n    projectId: \"marioplan-df136\",\n    storageBucket: \"marioplan-df136.appspot.com\",\n    messagingSenderId: \"7202008173\",\n    appId: \"1:7202008173:web:8aaec3b567ef7b436a6364\",\n    measurementId: \"G-KHMLY7R27V\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings( {})\nfirebase.analytics();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport firebase from './config/fbConfig'\n\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\n\nimport 'firebase/firestore';\n\nimport { useSelector} from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase';\n\nconst rffConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n}\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n    )\n    );\n\nconst rrfProps = {\n    firebase,\n    useFirestoreForProfile: true,\n    config: rffConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"container center\"><h4>Loading Screen...</h4></div>;\n      return children\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider  {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}